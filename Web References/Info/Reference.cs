//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CSCache.Info {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InfoSoap", Namespace="http://tempuri.org/CSwsInfo/Info")]
    public partial class Info : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TheatreGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGenresImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGenresOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRatingsImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRatingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPosterExtensionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPosterRequiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPosterByResOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPosterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrailerExtensionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsTrailerRequiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrailerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ATMSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RankingOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoviesOperationCompleted;
        
        private System.Threading.SendOrPostCallback MovieDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback Moviesv2OperationCompleted;
        
        private System.Threading.SendOrPostCallback MovieDetailv2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowTimeByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowTimeByDateTOSTRINGOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowTimeByDateAndMovieOperationCompleted;
        
        private System.Threading.SendOrPostCallback WeeklyShowTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback WeeklyShowTimeByMovieOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowTimeByDateAndMovieAndStartTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsByKeyLayoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKeyLayoutsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsProductImageRequiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductVideoOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsProductVideoRequiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsGenresImagesRequiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsRatingsImagesRequiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsScreenTypeImagesRequiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScreenTypeImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKLImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsKLImageRequiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDistriImageRequiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistriImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistriImageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InfoWeeklyShowTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ComplexInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Info() {
            this.Url = global::CSCache.Properties.Settings.Default.CSCache_Info_Info;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VersionCompletedEventHandler VersionCompleted;
        
        /// <remarks/>
        public event TheatreGroupsCompletedEventHandler TheatreGroupsCompleted;
        
        /// <remarks/>
        public event GetGenresImagesCompletedEventHandler GetGenresImagesCompleted;
        
        /// <remarks/>
        public event GetGenresCompletedEventHandler GetGenresCompleted;
        
        /// <remarks/>
        public event GetRatingsImagesCompletedEventHandler GetRatingsImagesCompleted;
        
        /// <remarks/>
        public event GetRatingsCompletedEventHandler GetRatingsCompleted;
        
        /// <remarks/>
        public event GetPosterExtensionCompletedEventHandler GetPosterExtensionCompleted;
        
        /// <remarks/>
        public event IsPosterRequiredCompletedEventHandler IsPosterRequiredCompleted;
        
        /// <remarks/>
        public event GetPosterByResCompletedEventHandler GetPosterByResCompleted;
        
        /// <remarks/>
        public event GetPosterCompletedEventHandler GetPosterCompleted;
        
        /// <remarks/>
        public event GetTrailerExtensionCompletedEventHandler GetTrailerExtensionCompleted;
        
        /// <remarks/>
        public event IsTrailerRequiredCompletedEventHandler IsTrailerRequiredCompleted;
        
        /// <remarks/>
        public event GetTrailerCompletedEventHandler GetTrailerCompleted;
        
        /// <remarks/>
        public event ATMSettingsCompletedEventHandler ATMSettingsCompleted;
        
        /// <remarks/>
        public event RankingCompletedEventHandler RankingCompleted;
        
        /// <remarks/>
        public event MoviesCompletedEventHandler MoviesCompleted;
        
        /// <remarks/>
        public event MovieDetailCompletedEventHandler MovieDetailCompleted;
        
        /// <remarks/>
        public event Moviesv2CompletedEventHandler Moviesv2Completed;
        
        /// <remarks/>
        public event MovieDetailv2CompletedEventHandler MovieDetailv2Completed;
        
        /// <remarks/>
        public event ShowTimeByDateCompletedEventHandler ShowTimeByDateCompleted;
        
        /// <remarks/>
        public event ShowTimeByDateTOSTRINGCompletedEventHandler ShowTimeByDateTOSTRINGCompleted;
        
        /// <remarks/>
        public event ShowTimeByDateAndMovieCompletedEventHandler ShowTimeByDateAndMovieCompleted;
        
        /// <remarks/>
        public event WeeklyShowTimeCompletedEventHandler WeeklyShowTimeCompleted;
        
        /// <remarks/>
        public event WeeklyShowTimeByMovieCompletedEventHandler WeeklyShowTimeByMovieCompleted;
        
        /// <remarks/>
        public event ShowTimeByDateAndMovieAndStartTimeCompletedEventHandler ShowTimeByDateAndMovieAndStartTimeCompleted;
        
        /// <remarks/>
        public event GetProductsCompletedEventHandler GetProductsCompleted;
        
        /// <remarks/>
        public event GetProductsByKeyLayoutCompletedEventHandler GetProductsByKeyLayoutCompleted;
        
        /// <remarks/>
        public event GetKeyLayoutsCompletedEventHandler GetKeyLayoutsCompleted;
        
        /// <remarks/>
        public event GetProductImageCompletedEventHandler GetProductImageCompleted;
        
        /// <remarks/>
        public event IsProductImageRequiredCompletedEventHandler IsProductImageRequiredCompleted;
        
        /// <remarks/>
        public event GetProductVideoCompletedEventHandler GetProductVideoCompleted;
        
        /// <remarks/>
        public event IsProductVideoRequiredCompletedEventHandler IsProductVideoRequiredCompleted;
        
        /// <remarks/>
        public event IsGenresImagesRequiredCompletedEventHandler IsGenresImagesRequiredCompleted;
        
        /// <remarks/>
        public event IsRatingsImagesRequiredCompletedEventHandler IsRatingsImagesRequiredCompleted;
        
        /// <remarks/>
        public event IsScreenTypeImagesRequiredCompletedEventHandler IsScreenTypeImagesRequiredCompleted;
        
        /// <remarks/>
        public event GetScreenTypeImageCompletedEventHandler GetScreenTypeImageCompleted;
        
        /// <remarks/>
        public event GetKLImageCompletedEventHandler GetKLImageCompleted;
        
        /// <remarks/>
        public event IsKLImageRequiredCompletedEventHandler IsKLImageRequiredCompleted;
        
        /// <remarks/>
        public event IsDistriImageRequiredCompletedEventHandler IsDistriImageRequiredCompleted;
        
        /// <remarks/>
        public event GetDistriImageCompletedEventHandler GetDistriImageCompleted;
        
        /// <remarks/>
        public event GetDistriImageInfoCompletedEventHandler GetDistriImageInfoCompleted;
        
        /// <remarks/>
        public event InfoWeeklyShowTimeCompletedEventHandler InfoWeeklyShowTimeCompleted;
        
        /// <remarks/>
        public event ComplexInfoCompletedEventHandler ComplexInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/Version", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Version() {
            object[] results = this.Invoke("Version", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void VersionAsync() {
            this.VersionAsync(null);
        }
        
        /// <remarks/>
        public void VersionAsync(object userState) {
            if ((this.VersionOperationCompleted == null)) {
                this.VersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersionOperationCompleted);
            }
            this.InvokeAsync("Version", new object[0], this.VersionOperationCompleted, userState);
        }
        
        private void OnVersionOperationCompleted(object arg) {
            if ((this.VersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersionCompleted(this, new VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/TheatreGroups", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TheatreGroups() {
            object[] results = this.Invoke("TheatreGroups", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TheatreGroupsAsync() {
            this.TheatreGroupsAsync(null);
        }
        
        /// <remarks/>
        public void TheatreGroupsAsync(object userState) {
            if ((this.TheatreGroupsOperationCompleted == null)) {
                this.TheatreGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTheatreGroupsOperationCompleted);
            }
            this.InvokeAsync("TheatreGroups", new object[0], this.TheatreGroupsOperationCompleted, userState);
        }
        
        private void OnTheatreGroupsOperationCompleted(object arg) {
            if ((this.TheatreGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TheatreGroupsCompleted(this, new TheatreGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetGenresImages", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGenresImages(int TheatreGroupId) {
            object[] results = this.Invoke("GetGenresImages", new object[] {
                        TheatreGroupId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGenresImagesAsync(int TheatreGroupId) {
            this.GetGenresImagesAsync(TheatreGroupId, null);
        }
        
        /// <remarks/>
        public void GetGenresImagesAsync(int TheatreGroupId, object userState) {
            if ((this.GetGenresImagesOperationCompleted == null)) {
                this.GetGenresImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGenresImagesOperationCompleted);
            }
            this.InvokeAsync("GetGenresImages", new object[] {
                        TheatreGroupId}, this.GetGenresImagesOperationCompleted, userState);
        }
        
        private void OnGetGenresImagesOperationCompleted(object arg) {
            if ((this.GetGenresImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGenresImagesCompleted(this, new GetGenresImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetGenres", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGenres(int TheatreGroupId) {
            object[] results = this.Invoke("GetGenres", new object[] {
                        TheatreGroupId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetGenresAsync(int TheatreGroupId) {
            this.GetGenresAsync(TheatreGroupId, null);
        }
        
        /// <remarks/>
        public void GetGenresAsync(int TheatreGroupId, object userState) {
            if ((this.GetGenresOperationCompleted == null)) {
                this.GetGenresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGenresOperationCompleted);
            }
            this.InvokeAsync("GetGenres", new object[] {
                        TheatreGroupId}, this.GetGenresOperationCompleted, userState);
        }
        
        private void OnGetGenresOperationCompleted(object arg) {
            if ((this.GetGenresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGenresCompleted(this, new GetGenresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetRatingsImages", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRatingsImages(int TheatreGroupId) {
            object[] results = this.Invoke("GetRatingsImages", new object[] {
                        TheatreGroupId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRatingsImagesAsync(int TheatreGroupId) {
            this.GetRatingsImagesAsync(TheatreGroupId, null);
        }
        
        /// <remarks/>
        public void GetRatingsImagesAsync(int TheatreGroupId, object userState) {
            if ((this.GetRatingsImagesOperationCompleted == null)) {
                this.GetRatingsImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRatingsImagesOperationCompleted);
            }
            this.InvokeAsync("GetRatingsImages", new object[] {
                        TheatreGroupId}, this.GetRatingsImagesOperationCompleted, userState);
        }
        
        private void OnGetRatingsImagesOperationCompleted(object arg) {
            if ((this.GetRatingsImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRatingsImagesCompleted(this, new GetRatingsImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetRatings", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRatings(int TheatreGroupId) {
            object[] results = this.Invoke("GetRatings", new object[] {
                        TheatreGroupId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRatingsAsync(int TheatreGroupId) {
            this.GetRatingsAsync(TheatreGroupId, null);
        }
        
        /// <remarks/>
        public void GetRatingsAsync(int TheatreGroupId, object userState) {
            if ((this.GetRatingsOperationCompleted == null)) {
                this.GetRatingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRatingsOperationCompleted);
            }
            this.InvokeAsync("GetRatings", new object[] {
                        TheatreGroupId}, this.GetRatingsOperationCompleted, userState);
        }
        
        private void OnGetRatingsOperationCompleted(object arg) {
            if ((this.GetRatingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRatingsCompleted(this, new GetRatingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetPosterExtension", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPosterExtension(int TheatreGroupId, int FeatureID) {
            object[] results = this.Invoke("GetPosterExtension", new object[] {
                        TheatreGroupId,
                        FeatureID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPosterExtensionAsync(int TheatreGroupId, int FeatureID) {
            this.GetPosterExtensionAsync(TheatreGroupId, FeatureID, null);
        }
        
        /// <remarks/>
        public void GetPosterExtensionAsync(int TheatreGroupId, int FeatureID, object userState) {
            if ((this.GetPosterExtensionOperationCompleted == null)) {
                this.GetPosterExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPosterExtensionOperationCompleted);
            }
            this.InvokeAsync("GetPosterExtension", new object[] {
                        TheatreGroupId,
                        FeatureID}, this.GetPosterExtensionOperationCompleted, userState);
        }
        
        private void OnGetPosterExtensionOperationCompleted(object arg) {
            if ((this.GetPosterExtensionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPosterExtensionCompleted(this, new GetPosterExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/IsPosterRequired", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsPosterRequired(int TheatreGroupId, int FeatureID, string DateCreated, string Hour) {
            object[] results = this.Invoke("IsPosterRequired", new object[] {
                        TheatreGroupId,
                        FeatureID,
                        DateCreated,
                        Hour});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsPosterRequiredAsync(int TheatreGroupId, int FeatureID, string DateCreated, string Hour) {
            this.IsPosterRequiredAsync(TheatreGroupId, FeatureID, DateCreated, Hour, null);
        }
        
        /// <remarks/>
        public void IsPosterRequiredAsync(int TheatreGroupId, int FeatureID, string DateCreated, string Hour, object userState) {
            if ((this.IsPosterRequiredOperationCompleted == null)) {
                this.IsPosterRequiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPosterRequiredOperationCompleted);
            }
            this.InvokeAsync("IsPosterRequired", new object[] {
                        TheatreGroupId,
                        FeatureID,
                        DateCreated,
                        Hour}, this.IsPosterRequiredOperationCompleted, userState);
        }
        
        private void OnIsPosterRequiredOperationCompleted(object arg) {
            if ((this.IsPosterRequiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPosterRequiredCompleted(this, new IsPosterRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetPosterByRes", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPosterByRes(int TheatreGroupId, int FeatureID, string Resolution) {
            object[] results = this.Invoke("GetPosterByRes", new object[] {
                        TheatreGroupId,
                        FeatureID,
                        Resolution});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPosterByResAsync(int TheatreGroupId, int FeatureID, string Resolution) {
            this.GetPosterByResAsync(TheatreGroupId, FeatureID, Resolution, null);
        }
        
        /// <remarks/>
        public void GetPosterByResAsync(int TheatreGroupId, int FeatureID, string Resolution, object userState) {
            if ((this.GetPosterByResOperationCompleted == null)) {
                this.GetPosterByResOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPosterByResOperationCompleted);
            }
            this.InvokeAsync("GetPosterByRes", new object[] {
                        TheatreGroupId,
                        FeatureID,
                        Resolution}, this.GetPosterByResOperationCompleted, userState);
        }
        
        private void OnGetPosterByResOperationCompleted(object arg) {
            if ((this.GetPosterByResCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPosterByResCompleted(this, new GetPosterByResCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetPoster", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPoster(int TheatreGroupId, int FeatureID) {
            object[] results = this.Invoke("GetPoster", new object[] {
                        TheatreGroupId,
                        FeatureID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPosterAsync(int TheatreGroupId, int FeatureID) {
            this.GetPosterAsync(TheatreGroupId, FeatureID, null);
        }
        
        /// <remarks/>
        public void GetPosterAsync(int TheatreGroupId, int FeatureID, object userState) {
            if ((this.GetPosterOperationCompleted == null)) {
                this.GetPosterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPosterOperationCompleted);
            }
            this.InvokeAsync("GetPoster", new object[] {
                        TheatreGroupId,
                        FeatureID}, this.GetPosterOperationCompleted, userState);
        }
        
        private void OnGetPosterOperationCompleted(object arg) {
            if ((this.GetPosterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPosterCompleted(this, new GetPosterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetTrailerExtension", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTrailerExtension(int TheatreGroupId, int FeatureID) {
            object[] results = this.Invoke("GetTrailerExtension", new object[] {
                        TheatreGroupId,
                        FeatureID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrailerExtensionAsync(int TheatreGroupId, int FeatureID) {
            this.GetTrailerExtensionAsync(TheatreGroupId, FeatureID, null);
        }
        
        /// <remarks/>
        public void GetTrailerExtensionAsync(int TheatreGroupId, int FeatureID, object userState) {
            if ((this.GetTrailerExtensionOperationCompleted == null)) {
                this.GetTrailerExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrailerExtensionOperationCompleted);
            }
            this.InvokeAsync("GetTrailerExtension", new object[] {
                        TheatreGroupId,
                        FeatureID}, this.GetTrailerExtensionOperationCompleted, userState);
        }
        
        private void OnGetTrailerExtensionOperationCompleted(object arg) {
            if ((this.GetTrailerExtensionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrailerExtensionCompleted(this, new GetTrailerExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/IsTrailerRequired", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsTrailerRequired(int TheatreGroupId, int FeatureID, string DateCreated, string Hour) {
            object[] results = this.Invoke("IsTrailerRequired", new object[] {
                        TheatreGroupId,
                        FeatureID,
                        DateCreated,
                        Hour});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsTrailerRequiredAsync(int TheatreGroupId, int FeatureID, string DateCreated, string Hour) {
            this.IsTrailerRequiredAsync(TheatreGroupId, FeatureID, DateCreated, Hour, null);
        }
        
        /// <remarks/>
        public void IsTrailerRequiredAsync(int TheatreGroupId, int FeatureID, string DateCreated, string Hour, object userState) {
            if ((this.IsTrailerRequiredOperationCompleted == null)) {
                this.IsTrailerRequiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsTrailerRequiredOperationCompleted);
            }
            this.InvokeAsync("IsTrailerRequired", new object[] {
                        TheatreGroupId,
                        FeatureID,
                        DateCreated,
                        Hour}, this.IsTrailerRequiredOperationCompleted, userState);
        }
        
        private void OnIsTrailerRequiredOperationCompleted(object arg) {
            if ((this.IsTrailerRequiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsTrailerRequiredCompleted(this, new IsTrailerRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetTrailer", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetTrailer(int TheatreGroupId, int FeatureID) {
            object[] results = this.Invoke("GetTrailer", new object[] {
                        TheatreGroupId,
                        FeatureID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTrailerAsync(int TheatreGroupId, int FeatureID) {
            this.GetTrailerAsync(TheatreGroupId, FeatureID, null);
        }
        
        /// <remarks/>
        public void GetTrailerAsync(int TheatreGroupId, int FeatureID, object userState) {
            if ((this.GetTrailerOperationCompleted == null)) {
                this.GetTrailerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrailerOperationCompleted);
            }
            this.InvokeAsync("GetTrailer", new object[] {
                        TheatreGroupId,
                        FeatureID}, this.GetTrailerOperationCompleted, userState);
        }
        
        private void OnGetTrailerOperationCompleted(object arg) {
            if ((this.GetTrailerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrailerCompleted(this, new GetTrailerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/ATMSettings", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ATMSettings(int TheatreGroupId) {
            object[] results = this.Invoke("ATMSettings", new object[] {
                        TheatreGroupId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ATMSettingsAsync(int TheatreGroupId) {
            this.ATMSettingsAsync(TheatreGroupId, null);
        }
        
        /// <remarks/>
        public void ATMSettingsAsync(int TheatreGroupId, object userState) {
            if ((this.ATMSettingsOperationCompleted == null)) {
                this.ATMSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnATMSettingsOperationCompleted);
            }
            this.InvokeAsync("ATMSettings", new object[] {
                        TheatreGroupId}, this.ATMSettingsOperationCompleted, userState);
        }
        
        private void OnATMSettingsOperationCompleted(object arg) {
            if ((this.ATMSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ATMSettingsCompleted(this, new ATMSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/Ranking", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Ranking(int TheatreGroupId, int count) {
            object[] results = this.Invoke("Ranking", new object[] {
                        TheatreGroupId,
                        count});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RankingAsync(int TheatreGroupId, int count) {
            this.RankingAsync(TheatreGroupId, count, null);
        }
        
        /// <remarks/>
        public void RankingAsync(int TheatreGroupId, int count, object userState) {
            if ((this.RankingOperationCompleted == null)) {
                this.RankingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRankingOperationCompleted);
            }
            this.InvokeAsync("Ranking", new object[] {
                        TheatreGroupId,
                        count}, this.RankingOperationCompleted, userState);
        }
        
        private void OnRankingOperationCompleted(object arg) {
            if ((this.RankingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RankingCompleted(this, new RankingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/Movies", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Movies(int TheatreGroupId, string FilterId) {
            object[] results = this.Invoke("Movies", new object[] {
                        TheatreGroupId,
                        FilterId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void MoviesAsync(int TheatreGroupId, string FilterId) {
            this.MoviesAsync(TheatreGroupId, FilterId, null);
        }
        
        /// <remarks/>
        public void MoviesAsync(int TheatreGroupId, string FilterId, object userState) {
            if ((this.MoviesOperationCompleted == null)) {
                this.MoviesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoviesOperationCompleted);
            }
            this.InvokeAsync("Movies", new object[] {
                        TheatreGroupId,
                        FilterId}, this.MoviesOperationCompleted, userState);
        }
        
        private void OnMoviesOperationCompleted(object arg) {
            if ((this.MoviesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoviesCompleted(this, new MoviesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/MovieDetail", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode MovieDetail(int TheatreGroupId, int FeatureId) {
            object[] results = this.Invoke("MovieDetail", new object[] {
                        TheatreGroupId,
                        FeatureId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void MovieDetailAsync(int TheatreGroupId, int FeatureId) {
            this.MovieDetailAsync(TheatreGroupId, FeatureId, null);
        }
        
        /// <remarks/>
        public void MovieDetailAsync(int TheatreGroupId, int FeatureId, object userState) {
            if ((this.MovieDetailOperationCompleted == null)) {
                this.MovieDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMovieDetailOperationCompleted);
            }
            this.InvokeAsync("MovieDetail", new object[] {
                        TheatreGroupId,
                        FeatureId}, this.MovieDetailOperationCompleted, userState);
        }
        
        private void OnMovieDetailOperationCompleted(object arg) {
            if ((this.MovieDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MovieDetailCompleted(this, new MovieDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/Moviesv2", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Moviesv2(int TheatreGroupId, string FilterId) {
            object[] results = this.Invoke("Moviesv2", new object[] {
                        TheatreGroupId,
                        FilterId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void Moviesv2Async(int TheatreGroupId, string FilterId) {
            this.Moviesv2Async(TheatreGroupId, FilterId, null);
        }
        
        /// <remarks/>
        public void Moviesv2Async(int TheatreGroupId, string FilterId, object userState) {
            if ((this.Moviesv2OperationCompleted == null)) {
                this.Moviesv2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoviesv2OperationCompleted);
            }
            this.InvokeAsync("Moviesv2", new object[] {
                        TheatreGroupId,
                        FilterId}, this.Moviesv2OperationCompleted, userState);
        }
        
        private void OnMoviesv2OperationCompleted(object arg) {
            if ((this.Moviesv2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Moviesv2Completed(this, new Moviesv2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/MovieDetailv2", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode MovieDetailv2(int TheatreGroupId, int FeatureId) {
            object[] results = this.Invoke("MovieDetailv2", new object[] {
                        TheatreGroupId,
                        FeatureId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void MovieDetailv2Async(int TheatreGroupId, int FeatureId) {
            this.MovieDetailv2Async(TheatreGroupId, FeatureId, null);
        }
        
        /// <remarks/>
        public void MovieDetailv2Async(int TheatreGroupId, int FeatureId, object userState) {
            if ((this.MovieDetailv2OperationCompleted == null)) {
                this.MovieDetailv2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMovieDetailv2OperationCompleted);
            }
            this.InvokeAsync("MovieDetailv2", new object[] {
                        TheatreGroupId,
                        FeatureId}, this.MovieDetailv2OperationCompleted, userState);
        }
        
        private void OnMovieDetailv2OperationCompleted(object arg) {
            if ((this.MovieDetailv2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MovieDetailv2Completed(this, new MovieDetailv2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/ShowTimeByDate", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ShowTimeByDate(int TheatreGroupId, string SDate, string FilterId) {
            object[] results = this.Invoke("ShowTimeByDate", new object[] {
                        TheatreGroupId,
                        SDate,
                        FilterId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ShowTimeByDateAsync(int TheatreGroupId, string SDate, string FilterId) {
            this.ShowTimeByDateAsync(TheatreGroupId, SDate, FilterId, null);
        }
        
        /// <remarks/>
        public void ShowTimeByDateAsync(int TheatreGroupId, string SDate, string FilterId, object userState) {
            if ((this.ShowTimeByDateOperationCompleted == null)) {
                this.ShowTimeByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowTimeByDateOperationCompleted);
            }
            this.InvokeAsync("ShowTimeByDate", new object[] {
                        TheatreGroupId,
                        SDate,
                        FilterId}, this.ShowTimeByDateOperationCompleted, userState);
        }
        
        private void OnShowTimeByDateOperationCompleted(object arg) {
            if ((this.ShowTimeByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowTimeByDateCompleted(this, new ShowTimeByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/ShowTimeByDateTOSTRING", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ShowTimeByDateTOSTRING(int TheatreGroupId, string SDate, string FilterId) {
            object[] results = this.Invoke("ShowTimeByDateTOSTRING", new object[] {
                        TheatreGroupId,
                        SDate,
                        FilterId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ShowTimeByDateTOSTRINGAsync(int TheatreGroupId, string SDate, string FilterId) {
            this.ShowTimeByDateTOSTRINGAsync(TheatreGroupId, SDate, FilterId, null);
        }
        
        /// <remarks/>
        public void ShowTimeByDateTOSTRINGAsync(int TheatreGroupId, string SDate, string FilterId, object userState) {
            if ((this.ShowTimeByDateTOSTRINGOperationCompleted == null)) {
                this.ShowTimeByDateTOSTRINGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowTimeByDateTOSTRINGOperationCompleted);
            }
            this.InvokeAsync("ShowTimeByDateTOSTRING", new object[] {
                        TheatreGroupId,
                        SDate,
                        FilterId}, this.ShowTimeByDateTOSTRINGOperationCompleted, userState);
        }
        
        private void OnShowTimeByDateTOSTRINGOperationCompleted(object arg) {
            if ((this.ShowTimeByDateTOSTRINGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowTimeByDateTOSTRINGCompleted(this, new ShowTimeByDateTOSTRINGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/ShowTimeByDateAndMovie", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ShowTimeByDateAndMovie(int TheatreGroupId, string SDate, int FeatureId, string FilterId) {
            object[] results = this.Invoke("ShowTimeByDateAndMovie", new object[] {
                        TheatreGroupId,
                        SDate,
                        FeatureId,
                        FilterId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ShowTimeByDateAndMovieAsync(int TheatreGroupId, string SDate, int FeatureId, string FilterId) {
            this.ShowTimeByDateAndMovieAsync(TheatreGroupId, SDate, FeatureId, FilterId, null);
        }
        
        /// <remarks/>
        public void ShowTimeByDateAndMovieAsync(int TheatreGroupId, string SDate, int FeatureId, string FilterId, object userState) {
            if ((this.ShowTimeByDateAndMovieOperationCompleted == null)) {
                this.ShowTimeByDateAndMovieOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowTimeByDateAndMovieOperationCompleted);
            }
            this.InvokeAsync("ShowTimeByDateAndMovie", new object[] {
                        TheatreGroupId,
                        SDate,
                        FeatureId,
                        FilterId}, this.ShowTimeByDateAndMovieOperationCompleted, userState);
        }
        
        private void OnShowTimeByDateAndMovieOperationCompleted(object arg) {
            if ((this.ShowTimeByDateAndMovieCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowTimeByDateAndMovieCompleted(this, new ShowTimeByDateAndMovieCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/WeeklyShowTime", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode WeeklyShowTime(int TheatreGroupId, string FilterId, string SDate) {
            object[] results = this.Invoke("WeeklyShowTime", new object[] {
                        TheatreGroupId,
                        FilterId,
                        SDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void WeeklyShowTimeAsync(int TheatreGroupId, string FilterId, string SDate) {
            this.WeeklyShowTimeAsync(TheatreGroupId, FilterId, SDate, null);
        }
        
        /// <remarks/>
        public void WeeklyShowTimeAsync(int TheatreGroupId, string FilterId, string SDate, object userState) {
            if ((this.WeeklyShowTimeOperationCompleted == null)) {
                this.WeeklyShowTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWeeklyShowTimeOperationCompleted);
            }
            this.InvokeAsync("WeeklyShowTime", new object[] {
                        TheatreGroupId,
                        FilterId,
                        SDate}, this.WeeklyShowTimeOperationCompleted, userState);
        }
        
        private void OnWeeklyShowTimeOperationCompleted(object arg) {
            if ((this.WeeklyShowTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WeeklyShowTimeCompleted(this, new WeeklyShowTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/WeeklyShowTimeByMovie", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode WeeklyShowTimeByMovie(int TheatreGroupId, int FeatureId, string FilterId) {
            object[] results = this.Invoke("WeeklyShowTimeByMovie", new object[] {
                        TheatreGroupId,
                        FeatureId,
                        FilterId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void WeeklyShowTimeByMovieAsync(int TheatreGroupId, int FeatureId, string FilterId) {
            this.WeeklyShowTimeByMovieAsync(TheatreGroupId, FeatureId, FilterId, null);
        }
        
        /// <remarks/>
        public void WeeklyShowTimeByMovieAsync(int TheatreGroupId, int FeatureId, string FilterId, object userState) {
            if ((this.WeeklyShowTimeByMovieOperationCompleted == null)) {
                this.WeeklyShowTimeByMovieOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWeeklyShowTimeByMovieOperationCompleted);
            }
            this.InvokeAsync("WeeklyShowTimeByMovie", new object[] {
                        TheatreGroupId,
                        FeatureId,
                        FilterId}, this.WeeklyShowTimeByMovieOperationCompleted, userState);
        }
        
        private void OnWeeklyShowTimeByMovieOperationCompleted(object arg) {
            if ((this.WeeklyShowTimeByMovieCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WeeklyShowTimeByMovieCompleted(this, new WeeklyShowTimeByMovieCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/ShowTimeByDateAndMovieAndStartTime", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ShowTimeByDateAndMovieAndStartTime(int TheatreGroupId, string SDate, int FeatureId, string StartTime, string FilterId) {
            object[] results = this.Invoke("ShowTimeByDateAndMovieAndStartTime", new object[] {
                        TheatreGroupId,
                        SDate,
                        FeatureId,
                        StartTime,
                        FilterId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ShowTimeByDateAndMovieAndStartTimeAsync(int TheatreGroupId, string SDate, int FeatureId, string StartTime, string FilterId) {
            this.ShowTimeByDateAndMovieAndStartTimeAsync(TheatreGroupId, SDate, FeatureId, StartTime, FilterId, null);
        }
        
        /// <remarks/>
        public void ShowTimeByDateAndMovieAndStartTimeAsync(int TheatreGroupId, string SDate, int FeatureId, string StartTime, string FilterId, object userState) {
            if ((this.ShowTimeByDateAndMovieAndStartTimeOperationCompleted == null)) {
                this.ShowTimeByDateAndMovieAndStartTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowTimeByDateAndMovieAndStartTimeOperationCompleted);
            }
            this.InvokeAsync("ShowTimeByDateAndMovieAndStartTime", new object[] {
                        TheatreGroupId,
                        SDate,
                        FeatureId,
                        StartTime,
                        FilterId}, this.ShowTimeByDateAndMovieAndStartTimeOperationCompleted, userState);
        }
        
        private void OnShowTimeByDateAndMovieAndStartTimeOperationCompleted(object arg) {
            if ((this.ShowTimeByDateAndMovieAndStartTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowTimeByDateAndMovieAndStartTimeCompleted(this, new ShowTimeByDateAndMovieAndStartTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetProducts", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetProducts(int TheatreGroupId, string FilterID) {
            object[] results = this.Invoke("GetProducts", new object[] {
                        TheatreGroupId,
                        FilterID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsAsync(int TheatreGroupId, string FilterID) {
            this.GetProductsAsync(TheatreGroupId, FilterID, null);
        }
        
        /// <remarks/>
        public void GetProductsAsync(int TheatreGroupId, string FilterID, object userState) {
            if ((this.GetProductsOperationCompleted == null)) {
                this.GetProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsOperationCompleted);
            }
            this.InvokeAsync("GetProducts", new object[] {
                        TheatreGroupId,
                        FilterID}, this.GetProductsOperationCompleted, userState);
        }
        
        private void OnGetProductsOperationCompleted(object arg) {
            if ((this.GetProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsCompleted(this, new GetProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetProductsByKeyLayout", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetProductsByKeyLayout(int TheatreGroupId, int WorkstationId, int KeyLayoutId, string FilterID) {
            object[] results = this.Invoke("GetProductsByKeyLayout", new object[] {
                        TheatreGroupId,
                        WorkstationId,
                        KeyLayoutId,
                        FilterID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsByKeyLayoutAsync(int TheatreGroupId, int WorkstationId, int KeyLayoutId, string FilterID) {
            this.GetProductsByKeyLayoutAsync(TheatreGroupId, WorkstationId, KeyLayoutId, FilterID, null);
        }
        
        /// <remarks/>
        public void GetProductsByKeyLayoutAsync(int TheatreGroupId, int WorkstationId, int KeyLayoutId, string FilterID, object userState) {
            if ((this.GetProductsByKeyLayoutOperationCompleted == null)) {
                this.GetProductsByKeyLayoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsByKeyLayoutOperationCompleted);
            }
            this.InvokeAsync("GetProductsByKeyLayout", new object[] {
                        TheatreGroupId,
                        WorkstationId,
                        KeyLayoutId,
                        FilterID}, this.GetProductsByKeyLayoutOperationCompleted, userState);
        }
        
        private void OnGetProductsByKeyLayoutOperationCompleted(object arg) {
            if ((this.GetProductsByKeyLayoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsByKeyLayoutCompleted(this, new GetProductsByKeyLayoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetKeyLayouts", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetKeyLayouts(int TheatreGroupId, int WorkstationID, string FilterID) {
            object[] results = this.Invoke("GetKeyLayouts", new object[] {
                        TheatreGroupId,
                        WorkstationID,
                        FilterID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetKeyLayoutsAsync(int TheatreGroupId, int WorkstationID, string FilterID) {
            this.GetKeyLayoutsAsync(TheatreGroupId, WorkstationID, FilterID, null);
        }
        
        /// <remarks/>
        public void GetKeyLayoutsAsync(int TheatreGroupId, int WorkstationID, string FilterID, object userState) {
            if ((this.GetKeyLayoutsOperationCompleted == null)) {
                this.GetKeyLayoutsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeyLayoutsOperationCompleted);
            }
            this.InvokeAsync("GetKeyLayouts", new object[] {
                        TheatreGroupId,
                        WorkstationID,
                        FilterID}, this.GetKeyLayoutsOperationCompleted, userState);
        }
        
        private void OnGetKeyLayoutsOperationCompleted(object arg) {
            if ((this.GetKeyLayoutsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeyLayoutsCompleted(this, new GetKeyLayoutsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetProductImage", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetProductImage(int TheatreGroupId, int ProductID) {
            object[] results = this.Invoke("GetProductImage", new object[] {
                        TheatreGroupId,
                        ProductID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductImageAsync(int TheatreGroupId, int ProductID) {
            this.GetProductImageAsync(TheatreGroupId, ProductID, null);
        }
        
        /// <remarks/>
        public void GetProductImageAsync(int TheatreGroupId, int ProductID, object userState) {
            if ((this.GetProductImageOperationCompleted == null)) {
                this.GetProductImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductImageOperationCompleted);
            }
            this.InvokeAsync("GetProductImage", new object[] {
                        TheatreGroupId,
                        ProductID}, this.GetProductImageOperationCompleted, userState);
        }
        
        private void OnGetProductImageOperationCompleted(object arg) {
            if ((this.GetProductImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductImageCompleted(this, new GetProductImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/IsProductImageRequired", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsProductImageRequired(int TheatreGroupId, int ProductID, string DateCreated, string Hour) {
            object[] results = this.Invoke("IsProductImageRequired", new object[] {
                        TheatreGroupId,
                        ProductID,
                        DateCreated,
                        Hour});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsProductImageRequiredAsync(int TheatreGroupId, int ProductID, string DateCreated, string Hour) {
            this.IsProductImageRequiredAsync(TheatreGroupId, ProductID, DateCreated, Hour, null);
        }
        
        /// <remarks/>
        public void IsProductImageRequiredAsync(int TheatreGroupId, int ProductID, string DateCreated, string Hour, object userState) {
            if ((this.IsProductImageRequiredOperationCompleted == null)) {
                this.IsProductImageRequiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsProductImageRequiredOperationCompleted);
            }
            this.InvokeAsync("IsProductImageRequired", new object[] {
                        TheatreGroupId,
                        ProductID,
                        DateCreated,
                        Hour}, this.IsProductImageRequiredOperationCompleted, userState);
        }
        
        private void OnIsProductImageRequiredOperationCompleted(object arg) {
            if ((this.IsProductImageRequiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsProductImageRequiredCompleted(this, new IsProductImageRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetProductVideo", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetProductVideo(int TheatreGroupId, int ProductID) {
            object[] results = this.Invoke("GetProductVideo", new object[] {
                        TheatreGroupId,
                        ProductID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductVideoAsync(int TheatreGroupId, int ProductID) {
            this.GetProductVideoAsync(TheatreGroupId, ProductID, null);
        }
        
        /// <remarks/>
        public void GetProductVideoAsync(int TheatreGroupId, int ProductID, object userState) {
            if ((this.GetProductVideoOperationCompleted == null)) {
                this.GetProductVideoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductVideoOperationCompleted);
            }
            this.InvokeAsync("GetProductVideo", new object[] {
                        TheatreGroupId,
                        ProductID}, this.GetProductVideoOperationCompleted, userState);
        }
        
        private void OnGetProductVideoOperationCompleted(object arg) {
            if ((this.GetProductVideoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductVideoCompleted(this, new GetProductVideoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/IsProductVideoRequired", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsProductVideoRequired(int TheatreGroupId, int ProductID, string DateCreated, string Hour) {
            object[] results = this.Invoke("IsProductVideoRequired", new object[] {
                        TheatreGroupId,
                        ProductID,
                        DateCreated,
                        Hour});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsProductVideoRequiredAsync(int TheatreGroupId, int ProductID, string DateCreated, string Hour) {
            this.IsProductVideoRequiredAsync(TheatreGroupId, ProductID, DateCreated, Hour, null);
        }
        
        /// <remarks/>
        public void IsProductVideoRequiredAsync(int TheatreGroupId, int ProductID, string DateCreated, string Hour, object userState) {
            if ((this.IsProductVideoRequiredOperationCompleted == null)) {
                this.IsProductVideoRequiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsProductVideoRequiredOperationCompleted);
            }
            this.InvokeAsync("IsProductVideoRequired", new object[] {
                        TheatreGroupId,
                        ProductID,
                        DateCreated,
                        Hour}, this.IsProductVideoRequiredOperationCompleted, userState);
        }
        
        private void OnIsProductVideoRequiredOperationCompleted(object arg) {
            if ((this.IsProductVideoRequiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsProductVideoRequiredCompleted(this, new IsProductVideoRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/IsGenresImagesRequired", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsGenresImagesRequired(int TheatreGroupId, string DateCreated, string Hour) {
            object[] results = this.Invoke("IsGenresImagesRequired", new object[] {
                        TheatreGroupId,
                        DateCreated,
                        Hour});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsGenresImagesRequiredAsync(int TheatreGroupId, string DateCreated, string Hour) {
            this.IsGenresImagesRequiredAsync(TheatreGroupId, DateCreated, Hour, null);
        }
        
        /// <remarks/>
        public void IsGenresImagesRequiredAsync(int TheatreGroupId, string DateCreated, string Hour, object userState) {
            if ((this.IsGenresImagesRequiredOperationCompleted == null)) {
                this.IsGenresImagesRequiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsGenresImagesRequiredOperationCompleted);
            }
            this.InvokeAsync("IsGenresImagesRequired", new object[] {
                        TheatreGroupId,
                        DateCreated,
                        Hour}, this.IsGenresImagesRequiredOperationCompleted, userState);
        }
        
        private void OnIsGenresImagesRequiredOperationCompleted(object arg) {
            if ((this.IsGenresImagesRequiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsGenresImagesRequiredCompleted(this, new IsGenresImagesRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/IsRatingsImagesRequired", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsRatingsImagesRequired(int TheatreGroupId, string DateCreated, string Hour) {
            object[] results = this.Invoke("IsRatingsImagesRequired", new object[] {
                        TheatreGroupId,
                        DateCreated,
                        Hour});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsRatingsImagesRequiredAsync(int TheatreGroupId, string DateCreated, string Hour) {
            this.IsRatingsImagesRequiredAsync(TheatreGroupId, DateCreated, Hour, null);
        }
        
        /// <remarks/>
        public void IsRatingsImagesRequiredAsync(int TheatreGroupId, string DateCreated, string Hour, object userState) {
            if ((this.IsRatingsImagesRequiredOperationCompleted == null)) {
                this.IsRatingsImagesRequiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsRatingsImagesRequiredOperationCompleted);
            }
            this.InvokeAsync("IsRatingsImagesRequired", new object[] {
                        TheatreGroupId,
                        DateCreated,
                        Hour}, this.IsRatingsImagesRequiredOperationCompleted, userState);
        }
        
        private void OnIsRatingsImagesRequiredOperationCompleted(object arg) {
            if ((this.IsRatingsImagesRequiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsRatingsImagesRequiredCompleted(this, new IsRatingsImagesRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/IsScreenTypeImagesRequired", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsScreenTypeImagesRequired(int TheatreGroupId, int ScreenID, string DateCreated, string Hour) {
            object[] results = this.Invoke("IsScreenTypeImagesRequired", new object[] {
                        TheatreGroupId,
                        ScreenID,
                        DateCreated,
                        Hour});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsScreenTypeImagesRequiredAsync(int TheatreGroupId, int ScreenID, string DateCreated, string Hour) {
            this.IsScreenTypeImagesRequiredAsync(TheatreGroupId, ScreenID, DateCreated, Hour, null);
        }
        
        /// <remarks/>
        public void IsScreenTypeImagesRequiredAsync(int TheatreGroupId, int ScreenID, string DateCreated, string Hour, object userState) {
            if ((this.IsScreenTypeImagesRequiredOperationCompleted == null)) {
                this.IsScreenTypeImagesRequiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsScreenTypeImagesRequiredOperationCompleted);
            }
            this.InvokeAsync("IsScreenTypeImagesRequired", new object[] {
                        TheatreGroupId,
                        ScreenID,
                        DateCreated,
                        Hour}, this.IsScreenTypeImagesRequiredOperationCompleted, userState);
        }
        
        private void OnIsScreenTypeImagesRequiredOperationCompleted(object arg) {
            if ((this.IsScreenTypeImagesRequiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsScreenTypeImagesRequiredCompleted(this, new IsScreenTypeImagesRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetScreenTypeImage", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetScreenTypeImage(int TheatreGroupId, int ScreenID) {
            object[] results = this.Invoke("GetScreenTypeImage", new object[] {
                        TheatreGroupId,
                        ScreenID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetScreenTypeImageAsync(int TheatreGroupId, int ScreenID) {
            this.GetScreenTypeImageAsync(TheatreGroupId, ScreenID, null);
        }
        
        /// <remarks/>
        public void GetScreenTypeImageAsync(int TheatreGroupId, int ScreenID, object userState) {
            if ((this.GetScreenTypeImageOperationCompleted == null)) {
                this.GetScreenTypeImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScreenTypeImageOperationCompleted);
            }
            this.InvokeAsync("GetScreenTypeImage", new object[] {
                        TheatreGroupId,
                        ScreenID}, this.GetScreenTypeImageOperationCompleted, userState);
        }
        
        private void OnGetScreenTypeImageOperationCompleted(object arg) {
            if ((this.GetScreenTypeImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScreenTypeImageCompleted(this, new GetScreenTypeImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetKLImage", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetKLImage(int TheatreGroupId, int KeyLayoutID) {
            object[] results = this.Invoke("GetKLImage", new object[] {
                        TheatreGroupId,
                        KeyLayoutID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetKLImageAsync(int TheatreGroupId, int KeyLayoutID) {
            this.GetKLImageAsync(TheatreGroupId, KeyLayoutID, null);
        }
        
        /// <remarks/>
        public void GetKLImageAsync(int TheatreGroupId, int KeyLayoutID, object userState) {
            if ((this.GetKLImageOperationCompleted == null)) {
                this.GetKLImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKLImageOperationCompleted);
            }
            this.InvokeAsync("GetKLImage", new object[] {
                        TheatreGroupId,
                        KeyLayoutID}, this.GetKLImageOperationCompleted, userState);
        }
        
        private void OnGetKLImageOperationCompleted(object arg) {
            if ((this.GetKLImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKLImageCompleted(this, new GetKLImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/IsKLImageRequired", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsKLImageRequired(int TheatreGroupId, int KeyLayoutID, string DateCreated, string Hour) {
            object[] results = this.Invoke("IsKLImageRequired", new object[] {
                        TheatreGroupId,
                        KeyLayoutID,
                        DateCreated,
                        Hour});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsKLImageRequiredAsync(int TheatreGroupId, int KeyLayoutID, string DateCreated, string Hour) {
            this.IsKLImageRequiredAsync(TheatreGroupId, KeyLayoutID, DateCreated, Hour, null);
        }
        
        /// <remarks/>
        public void IsKLImageRequiredAsync(int TheatreGroupId, int KeyLayoutID, string DateCreated, string Hour, object userState) {
            if ((this.IsKLImageRequiredOperationCompleted == null)) {
                this.IsKLImageRequiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsKLImageRequiredOperationCompleted);
            }
            this.InvokeAsync("IsKLImageRequired", new object[] {
                        TheatreGroupId,
                        KeyLayoutID,
                        DateCreated,
                        Hour}, this.IsKLImageRequiredOperationCompleted, userState);
        }
        
        private void OnIsKLImageRequiredOperationCompleted(object arg) {
            if ((this.IsKLImageRequiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsKLImageRequiredCompleted(this, new IsKLImageRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/IsDistriImageRequired", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsDistriImageRequired(int TheatreGroupId, int DistributionID, string DateCreated, string Hour) {
            object[] results = this.Invoke("IsDistriImageRequired", new object[] {
                        TheatreGroupId,
                        DistributionID,
                        DateCreated,
                        Hour});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsDistriImageRequiredAsync(int TheatreGroupId, int DistributionID, string DateCreated, string Hour) {
            this.IsDistriImageRequiredAsync(TheatreGroupId, DistributionID, DateCreated, Hour, null);
        }
        
        /// <remarks/>
        public void IsDistriImageRequiredAsync(int TheatreGroupId, int DistributionID, string DateCreated, string Hour, object userState) {
            if ((this.IsDistriImageRequiredOperationCompleted == null)) {
                this.IsDistriImageRequiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDistriImageRequiredOperationCompleted);
            }
            this.InvokeAsync("IsDistriImageRequired", new object[] {
                        TheatreGroupId,
                        DistributionID,
                        DateCreated,
                        Hour}, this.IsDistriImageRequiredOperationCompleted, userState);
        }
        
        private void OnIsDistriImageRequiredOperationCompleted(object arg) {
            if ((this.IsDistriImageRequiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDistriImageRequiredCompleted(this, new IsDistriImageRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetDistriImage", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDistriImage(int TheatreGroupId, int DistributionID) {
            object[] results = this.Invoke("GetDistriImage", new object[] {
                        TheatreGroupId,
                        DistributionID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistriImageAsync(int TheatreGroupId, int DistributionID) {
            this.GetDistriImageAsync(TheatreGroupId, DistributionID, null);
        }
        
        /// <remarks/>
        public void GetDistriImageAsync(int TheatreGroupId, int DistributionID, object userState) {
            if ((this.GetDistriImageOperationCompleted == null)) {
                this.GetDistriImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistriImageOperationCompleted);
            }
            this.InvokeAsync("GetDistriImage", new object[] {
                        TheatreGroupId,
                        DistributionID}, this.GetDistriImageOperationCompleted, userState);
        }
        
        private void OnGetDistriImageOperationCompleted(object arg) {
            if ((this.GetDistriImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistriImageCompleted(this, new GetDistriImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/GetDistriImageInfo", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDistriImageInfo(int TheatreGroupId, int DistributionID) {
            object[] results = this.Invoke("GetDistriImageInfo", new object[] {
                        TheatreGroupId,
                        DistributionID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistriImageInfoAsync(int TheatreGroupId, int DistributionID) {
            this.GetDistriImageInfoAsync(TheatreGroupId, DistributionID, null);
        }
        
        /// <remarks/>
        public void GetDistriImageInfoAsync(int TheatreGroupId, int DistributionID, object userState) {
            if ((this.GetDistriImageInfoOperationCompleted == null)) {
                this.GetDistriImageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistriImageInfoOperationCompleted);
            }
            this.InvokeAsync("GetDistriImageInfo", new object[] {
                        TheatreGroupId,
                        DistributionID}, this.GetDistriImageInfoOperationCompleted, userState);
        }
        
        private void OnGetDistriImageInfoOperationCompleted(object arg) {
            if ((this.GetDistriImageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistriImageInfoCompleted(this, new GetDistriImageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/InfoWeeklyShowTime", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode InfoWeeklyShowTime(int TheatreGroupId, string SDate) {
            object[] results = this.Invoke("InfoWeeklyShowTime", new object[] {
                        TheatreGroupId,
                        SDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void InfoWeeklyShowTimeAsync(int TheatreGroupId, string SDate) {
            this.InfoWeeklyShowTimeAsync(TheatreGroupId, SDate, null);
        }
        
        /// <remarks/>
        public void InfoWeeklyShowTimeAsync(int TheatreGroupId, string SDate, object userState) {
            if ((this.InfoWeeklyShowTimeOperationCompleted == null)) {
                this.InfoWeeklyShowTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInfoWeeklyShowTimeOperationCompleted);
            }
            this.InvokeAsync("InfoWeeklyShowTime", new object[] {
                        TheatreGroupId,
                        SDate}, this.InfoWeeklyShowTimeOperationCompleted, userState);
        }
        
        private void OnInfoWeeklyShowTimeOperationCompleted(object arg) {
            if ((this.InfoWeeklyShowTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InfoWeeklyShowTimeCompleted(this, new InfoWeeklyShowTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CSwsInfo/Info/ComplexInfo", RequestNamespace="http://tempuri.org/CSwsInfo/Info", ResponseNamespace="http://tempuri.org/CSwsInfo/Info", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ComplexInfo(int TheatreGroupId) {
            object[] results = this.Invoke("ComplexInfo", new object[] {
                        TheatreGroupId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ComplexInfoAsync(int TheatreGroupId) {
            this.ComplexInfoAsync(TheatreGroupId, null);
        }
        
        /// <remarks/>
        public void ComplexInfoAsync(int TheatreGroupId, object userState) {
            if ((this.ComplexInfoOperationCompleted == null)) {
                this.ComplexInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnComplexInfoOperationCompleted);
            }
            this.InvokeAsync("ComplexInfo", new object[] {
                        TheatreGroupId}, this.ComplexInfoOperationCompleted, userState);
        }
        
        private void OnComplexInfoOperationCompleted(object arg) {
            if ((this.ComplexInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ComplexInfoCompleted(this, new ComplexInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void VersionCompletedEventHandler(object sender, VersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void TheatreGroupsCompletedEventHandler(object sender, TheatreGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TheatreGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TheatreGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetGenresImagesCompletedEventHandler(object sender, GetGenresImagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGenresImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGenresImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetGenresCompletedEventHandler(object sender, GetGenresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGenresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGenresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetRatingsImagesCompletedEventHandler(object sender, GetRatingsImagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRatingsImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRatingsImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetRatingsCompletedEventHandler(object sender, GetRatingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRatingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRatingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetPosterExtensionCompletedEventHandler(object sender, GetPosterExtensionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPosterExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPosterExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void IsPosterRequiredCompletedEventHandler(object sender, IsPosterRequiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPosterRequiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPosterRequiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetPosterByResCompletedEventHandler(object sender, GetPosterByResCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPosterByResCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPosterByResCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetPosterCompletedEventHandler(object sender, GetPosterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPosterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPosterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTrailerExtensionCompletedEventHandler(object sender, GetTrailerExtensionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrailerExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrailerExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void IsTrailerRequiredCompletedEventHandler(object sender, IsTrailerRequiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsTrailerRequiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsTrailerRequiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTrailerCompletedEventHandler(object sender, GetTrailerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrailerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrailerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ATMSettingsCompletedEventHandler(object sender, ATMSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATMSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ATMSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void RankingCompletedEventHandler(object sender, RankingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RankingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RankingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void MoviesCompletedEventHandler(object sender, MoviesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoviesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoviesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void MovieDetailCompletedEventHandler(object sender, MovieDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MovieDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MovieDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void Moviesv2CompletedEventHandler(object sender, Moviesv2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Moviesv2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Moviesv2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void MovieDetailv2CompletedEventHandler(object sender, MovieDetailv2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MovieDetailv2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MovieDetailv2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ShowTimeByDateCompletedEventHandler(object sender, ShowTimeByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowTimeByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowTimeByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ShowTimeByDateTOSTRINGCompletedEventHandler(object sender, ShowTimeByDateTOSTRINGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowTimeByDateTOSTRINGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowTimeByDateTOSTRINGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ShowTimeByDateAndMovieCompletedEventHandler(object sender, ShowTimeByDateAndMovieCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowTimeByDateAndMovieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowTimeByDateAndMovieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WeeklyShowTimeCompletedEventHandler(object sender, WeeklyShowTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WeeklyShowTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WeeklyShowTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void WeeklyShowTimeByMovieCompletedEventHandler(object sender, WeeklyShowTimeByMovieCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WeeklyShowTimeByMovieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WeeklyShowTimeByMovieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ShowTimeByDateAndMovieAndStartTimeCompletedEventHandler(object sender, ShowTimeByDateAndMovieAndStartTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowTimeByDateAndMovieAndStartTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowTimeByDateAndMovieAndStartTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetProductsCompletedEventHandler(object sender, GetProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetProductsByKeyLayoutCompletedEventHandler(object sender, GetProductsByKeyLayoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsByKeyLayoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsByKeyLayoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetKeyLayoutsCompletedEventHandler(object sender, GetKeyLayoutsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeyLayoutsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKeyLayoutsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetProductImageCompletedEventHandler(object sender, GetProductImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void IsProductImageRequiredCompletedEventHandler(object sender, IsProductImageRequiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsProductImageRequiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsProductImageRequiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetProductVideoCompletedEventHandler(object sender, GetProductVideoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductVideoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductVideoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void IsProductVideoRequiredCompletedEventHandler(object sender, IsProductVideoRequiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsProductVideoRequiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsProductVideoRequiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void IsGenresImagesRequiredCompletedEventHandler(object sender, IsGenresImagesRequiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsGenresImagesRequiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsGenresImagesRequiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void IsRatingsImagesRequiredCompletedEventHandler(object sender, IsRatingsImagesRequiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsRatingsImagesRequiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsRatingsImagesRequiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void IsScreenTypeImagesRequiredCompletedEventHandler(object sender, IsScreenTypeImagesRequiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsScreenTypeImagesRequiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsScreenTypeImagesRequiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetScreenTypeImageCompletedEventHandler(object sender, GetScreenTypeImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScreenTypeImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScreenTypeImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetKLImageCompletedEventHandler(object sender, GetKLImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKLImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKLImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void IsKLImageRequiredCompletedEventHandler(object sender, IsKLImageRequiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsKLImageRequiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsKLImageRequiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void IsDistriImageRequiredCompletedEventHandler(object sender, IsDistriImageRequiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDistriImageRequiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDistriImageRequiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetDistriImageCompletedEventHandler(object sender, GetDistriImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistriImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistriImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetDistriImageInfoCompletedEventHandler(object sender, GetDistriImageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistriImageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistriImageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InfoWeeklyShowTimeCompletedEventHandler(object sender, InfoWeeklyShowTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InfoWeeklyShowTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InfoWeeklyShowTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ComplexInfoCompletedEventHandler(object sender, ComplexInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ComplexInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ComplexInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591